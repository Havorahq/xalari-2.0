/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Agreement, AgreementInterface } from "../Agreement";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_employerId",
        type: "string",
      },
      {
        internalType: "string",
        name: "_employeeId",
        type: "string",
      },
      {
        internalType: "address",
        name: "_employerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_currency",
        type: "address",
      },
      {
        internalType: "string",
        name: "_contractType",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "agreementStatus",
    outputs: [
      {
        internalType: "enum Agreement.AgreementStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "close",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractType",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currency",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymentAddress",
        type: "address",
      },
    ],
    name: "employeeEnterContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "employeeId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "employerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "employerId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "suspend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015d4380380620015d4833981810160405281019062000037919062000320565b846000908162000048919062000650565b5083600190816200005a919062000650565b5082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600460146101000a81548160ff0219169083600481111562000106576200010562000737565b5b021790555080600590816200011c919062000650565b50505050505062000766565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001918262000146565b810181811067ffffffffffffffff82111715620001b357620001b262000157565b5b80604052505050565b6000620001c862000128565b9050620001d6828262000186565b919050565b600067ffffffffffffffff821115620001f957620001f862000157565b5b620002048262000146565b9050602081019050919050565b60005b838110156200023157808201518184015260208101905062000214565b60008484015250505050565b6000620002546200024e84620001db565b620001bc565b90508281526020810184848401111562000273576200027262000141565b5b6200028084828562000211565b509392505050565b600082601f830112620002a0576200029f6200013c565b5b8151620002b28482602086016200023d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002e882620002bb565b9050919050565b620002fa81620002db565b81146200030657600080fd5b50565b6000815190506200031a81620002ef565b92915050565b600080600080600060a086880312156200033f576200033e62000132565b5b600086015167ffffffffffffffff81111562000360576200035f62000137565b5b6200036e8882890162000288565b955050602086015167ffffffffffffffff81111562000392576200039162000137565b5b620003a08882890162000288565b9450506040620003b38882890162000309565b9350506060620003c68882890162000309565b925050608086015167ffffffffffffffff811115620003ea57620003e962000137565b5b620003f88882890162000288565b9150509295509295909350565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200045857607f821691505b6020821081036200046e576200046d62000410565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004d87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000499565b620004e4868362000499565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005316200052b6200052584620004fc565b62000506565b620004fc565b9050919050565b6000819050919050565b6200054d8362000510565b620005656200055c8262000538565b848454620004a6565b825550505050565b600090565b6200057c6200056d565b6200058981848462000542565b505050565b5b81811015620005b157620005a560008262000572565b6001810190506200058f565b5050565b601f8211156200060057620005ca8162000474565b620005d58462000489565b81016020851015620005e5578190505b620005fd620005f48562000489565b8301826200058e565b50505b505050565b600082821c905092915050565b6000620006256000198460080262000605565b1980831691505092915050565b600062000640838362000612565b9150826002028217905092915050565b6200065b8262000405565b67ffffffffffffffff81111562000677576200067662000157565b5b6200068382546200043f565b62000690828285620005b5565b600060209050601f831160018114620006c85760008415620006b3578287015190505b620006bf858262000632565b8655506200072f565b601f198416620006d88662000474565b60005b828110156200070257848901518255600182019150602085019450602081019050620006db565b868310156200072257848901516200071e601f89168262000612565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610e5e80620007766000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806398b9f0041161007157806398b9f00414610145578063cb2ef6f714610161578063e5a6b10f1461017f578063e6400bbe1461019d578063ea8a1af0146101a7578063ef838f88146101b1576100b4565b80630d0175a9146100b957806310ccb04c146100d757806324600fc3146100f557806343d726d6146100ff578063633423be1461010957806384ab30a514610127575b600080fd5b6100c16101cf565b6040516100ce91906109c3565b60405180910390f35b6100df6101f5565b6040516100ec9190610a55565b60405180910390f35b6100fd610208565b005b61010761029a565b005b6101116103cc565b60405161011e91906109c3565b60405180910390f35b61012f6103f2565b60405161013c9190610b00565b60405180910390f35b61015f600480360381019061015a9190610b53565b610480565b005b610169610565565b6040516101769190610b00565b60405180910390f35b6101876105f3565b60405161019491906109c3565b60405180910390f35b6101a5610619565b005b6101af6107c1565b005b6101b96108f4565b6040516101c69190610b00565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460149054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028f90610bf2565b60405180910390fd5b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032190610bf2565b60405180910390fd5b6003600481111561033e5761033d6109de565b5b600460149054906101000a900460ff1660048111156103605761035f6109de565b5b036103a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039790610c84565b60405180910390fd5b60048060146101000a81548160ff021916908360048111156103c5576103c46109de565b5b0217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600180546103ff90610cd3565b80601f016020809104026020016040519081016040528092919081815260200182805461042b90610cd3565b80156104785780601f1061044d57610100808354040283529160200191610478565b820191906000526020600020905b81548152906001019060200180831161045b57829003601f168201915b505050505081565b60006004811115610494576104936109de565b5b600460149054906101000a900460ff1660048111156104b6576104b56109de565b5b146104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90610d76565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600460146101000a81548160ff0219169083600481111561055d5761055c6109de565b5b021790555050565b6005805461057290610cd3565b80601f016020809104026020016040519081016040528092919081815260200182805461059e90610cd3565b80156105eb5780601f106105c0576101008083540402835291602001916105eb565b820191906000526020600020905b8154815290600101906020018083116105ce57829003601f168201915b505050505081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a090610bf2565b60405180910390fd5b600360048111156106bd576106bc6109de565b5b600460149054906101000a900460ff1660048111156106df576106de6109de565b5b0361071f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071690610c84565b60405180910390fd5b600480811115610732576107316109de565b5b600460149054906101000a900460ff166004811115610754576107536109de565b5b03610794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078b90610e08565b60405180910390fd5b6002600460146101000a81548160ff021916908360048111156107ba576107b96109de565b5b0217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610851576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084890610bf2565b60405180910390fd5b60036004811115610865576108646109de565b5b600460149054906101000a900460ff166004811115610887576108866109de565b5b036108c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108be90610c84565b60405180910390fd5b6003600460146101000a81548160ff021916908360048111156108ed576108ec6109de565b5b0217905550565b6000805461090190610cd3565b80601f016020809104026020016040519081016040528092919081815260200182805461092d90610cd3565b801561097a5780601f1061094f5761010080835404028352916020019161097a565b820191906000526020600020905b81548152906001019060200180831161095d57829003601f168201915b505050505081565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109ad82610982565b9050919050565b6109bd816109a2565b82525050565b60006020820190506109d860008301846109b4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110610a1e57610a1d6109de565b5b50565b6000819050610a2f82610a0d565b919050565b6000610a3f82610a21565b9050919050565b610a4f81610a34565b82525050565b6000602082019050610a6a6000830184610a46565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aaa578082015181840152602081019050610a8f565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ad282610a70565b610adc8185610a7b565b9350610aec818560208601610a8c565b610af581610ab6565b840191505092915050565b60006020820190508181036000830152610b1a8184610ac7565b905092915050565b600080fd5b610b30816109a2565b8114610b3b57600080fd5b50565b600081359050610b4d81610b27565b92915050565b600060208284031215610b6957610b68610b22565b5b6000610b7784828501610b3e565b91505092915050565b7f596f7520617265206e6f7420616c6c6f77656420746f206361727279206f757460008201527f207468697320616374696f6e0000000000000000000000000000000000000000602082015250565b6000610bdc602c83610a7b565b9150610be782610b80565b604082019050919050565b60006020820190508181036000830152610c0b81610bcf565b9050919050565b7f5468697320636f6e74726163742068617320616c7265616479206265656e206360008201527f616e63656c6c6564000000000000000000000000000000000000000000000000602082015250565b6000610c6e602883610a7b565b9150610c7982610c12565b604082019050919050565b60006020820190508181036000830152610c9d81610c61565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ceb57607f821691505b602082108103610cfe57610cfd610ca4565b5b50919050565b7f5468697320636f6e7472616374206973206e6f206c6f6e6765722070656e646960008201527f6e67000000000000000000000000000000000000000000000000000000000000602082015250565b6000610d60602283610a7b565b9150610d6b82610d04565b604082019050919050565b60006020820190508181036000830152610d8f81610d53565b9050919050565b7f5468697320636f6e74726163742068617320616c7265616479206265656e206360008201527f6c6f736564000000000000000000000000000000000000000000000000000000602082015250565b6000610df2602583610a7b565b9150610dfd82610d96565b604082019050919050565b60006020820190508181036000830152610e2181610de5565b905091905056fea2646970667358221220bff64f9af6b046b0ee9b30e115c8baf0052c622f0f6b59e54d7c72d0a251c43064736f6c63430008180033";

type AgreementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgreementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Agreement__factory extends ContractFactory {
  constructor(...args: AgreementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _employerId: string,
    _employeeId: string,
    _employerAddress: AddressLike,
    _currency: AddressLike,
    _contractType: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _employerId,
      _employeeId,
      _employerAddress,
      _currency,
      _contractType,
      overrides || {}
    );
  }
  override deploy(
    _employerId: string,
    _employeeId: string,
    _employerAddress: AddressLike,
    _currency: AddressLike,
    _contractType: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _employerId,
      _employeeId,
      _employerAddress,
      _currency,
      _contractType,
      overrides || {}
    ) as Promise<
      Agreement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Agreement__factory {
    return super.connect(runner) as Agreement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgreementInterface {
    return new Interface(_abi) as AgreementInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Agreement {
    return new Contract(address, _abi, runner) as unknown as Agreement;
  }
}
